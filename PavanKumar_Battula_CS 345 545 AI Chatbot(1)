{"cells":[{"cell_type":"markdown","metadata":{"id":"05pp5gH17vtE"},"source":["\n","#**0. What Is A Chatbot?**\n","\n","AI Chatbots are applications that businesses and other organizations use to automate conversations between AI and humans. These conversations can occur through text (as with Copilot) or speech (as with Alexa, for example). Chatbots must comprehend and imitate human conversation when engaging with users.\n","\n","In order to process a large amount of natural language data, an AI uses NLP or Natural Language Processing. NLP tasks involve breaking down human text and audio signals from voice data in ways that computers can analyze and convert into comprehensible data. Some of the tasks in NLP data ingestion include:\n","\n","1. **Speech Recognition,** which involves converting speech into text using a subprocess called speech tagging, which allows a computer to break down speech and add context, accents, or other speech attributes.\n","2. **Word Sense Disambiguation,** which selects the most appropriate meaning for a word based on its context. For instance, it helps determine whether a word functions as a verb or a pronoun.\n","3. **Named Entity Recognition (NER),** Nwhic identifies words and phrases as specific entities, such as recognizing “Dav” as a person’s name or “America” as thase name of a country.\n","4. **Sentiment Analysis,** which focuses on extracting nuances and hidden emotions, like attitude, sarcasm, fear, or joy, from human speech.\n","\n","There are essentially two types of chatbots:\n","1. **Rule-Based (Scripted) Chatbots,** which operate based on predetermined scripts stored in their library. When a user inputs a query, the chatbot replies according to the predefined script within its library. One drawback of this type of chattbot is that users must structure their queries very precisely.\n","2. **Self-Learning (Artificially Intelligent) Chatbots,** which rely on a combination of NLP (for analysis) and AI in order to respond to nuanced questions and learn from each interaction to provide improved responses in the future.\n","\n","And then a combination of the two."]},{"cell_type":"markdown","metadata":{"id":"eQba7ARyQJGl"},"source":["#**1. Basic Text Input Chatbot**\n","\n","Read [this article on Analytics Vidhya](https://www.analyticsvidhya.com/blog/2021/10/complete-guide-to-build-your-ai-chatbot-with-nlp-in-python/). Here, the author is building a speech-to-text chatbot natively on Microsoft Windows. To get the code from this post working in Google Colab, we have to make some adjustments since there's an issue with building the PyAudio wheel in Google Colab. That is because, unfortunately, Google Colab does not support building packages that require compiling C extensions, such as PyAudio. That works only in MS Windows. I learned that the hard way.\n","\n","To rewrite the code so that it runs in Google Colab without requiring PyAudio or needing to connect to your local microphone, we will replace the speech-to-text functionality with text input.\n","\n","**NOTE:** The code below  generates a right-padding warning (which sent me down a fruitless hours-long debugging path) but works as intended by carrying on a conversation."]},{"cell_type":"markdown","metadata":{"id":"vAxzvVMuX5ej"},"source":["First, we import all the libraries we need"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KL0CEK5mXl-r"},"outputs":[],"source":["import transformers\n","import os\n","import time\n","import datetime\n","import numpy as np"]},{"cell_type":"markdown","metadata":{"id":"fsAZ3hCzX88L"},"source":["Next, we build a ChatBot class to provide functionality for initializing the chatbot, getting user input, responding to user input, checking for specific commands, and providing the current time.:\n","\n","1. Initialization (__init__ method):\n","When you create a new instance of the ChatBot class, it initializes with a specified name. This name is printed to indicate that the chatbot is starting up.\n","2. Getting User Input (get_text_input method):\n","This method prompts the user to enter text input, and it returns the input provided by the user.\n","3. Text Output (text_to_speech method):\n","This method takes a text input and prints it to the console, simulating the chatbot's response.\n","4. Wake-Up Check (wake_up method):\n","This method checks if the chatbot's name (converted to lowercase) is mentioned in the text input. If it is, it returns True; otherwise, it returns False.\n","5. Time Action (action_time method):\n","This method retrieves the current time and returns it in the format \"HH:MM\".\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4_FZGcytXtoy"},"outputs":[],"source":["# Building the ChatBot class\n","class ChatBot():\n","    def __init__(self, name):\n","        # Initialize the ChatBot with a name\n","        print(\"----- Starting up\", name, \"-----\")\n","        self.name = name\n","\n","    def get_text_input(self):\n","        # Method to get user input\n","        return input(\"Enter text: \")\n","\n","    @staticmethod\n","    def text_to_speech(text):\n","        # Method to output text to console\n","        print(\"ChatBot --> \", text)\n","\n","    def wake_up(self, text):\n","        # Method to check if the ChatBot's name is mentioned in the input\n","        return True if self.name in text.lower() else False\n","\n","    @staticmethod\n","    def action_time():\n","        # Method to get the current time\n","        return datetime.datetime.now().time().strftime('%H:%M')"]},{"cell_type":"markdown","metadata":{"id":"y07P05K-Ycnk"},"source":["To run the chatbot, we need to initialize the chatbot, load the necessary components (tokenizer and conversational pipeline), greet the user, handle user input, process commands, engage in conversation, and exit gracefully when prompted. Here is how this happens:\n","1. **Initializing the ChatBot:** An instance of the ChatBot class is created with the name \"ChatBot\". This initializes the chatbot and prints a startup message indicating its name.\n","2. **Loading the Pre-trained Tokenizer:** The code loads a pre-trained tokenizer using transformers.AutoTokenizer.from_pretrained(). The tokenizer is loaded from the \"microsoft/DialoGPT-medium\" model, and the padding side is set to \"left\" to address a specific error.\n","3. **Creating the Conversational Pipeline:** A conversational pipeline is created using transformers.pipeline(). This pipeline utilizes the pre-trained DialoGPT-medium model for conversational generation and uses the loaded tokenizer for tokenization.\n","4. **Setting Environment Variable for Tokenization:** An environment variable \"TOKENIZERS_PARALLELISM\" is set to \"true\". This is done to enable parallel tokenization, which can improve performance.\n","5. **Greeting the User:** The chatbot greets the user with the message \"Hello, I am ChatBot. How can I assist you today?\" using the text_to_speech method.\n","6. **Main Loop:** The code enters a while loop (while ex:) where ex is initially set to True. This loop continues until ex is set to False.\n","7. **User Input Processing:** Inside the loop, the chatbot waits for user input using the get_text_input method.\n","8. **Command Handling:** The user input is checked for specific commands such as wake-up commands (mentioning the chatbot's name), time-related commands, polite responses, and exit commands. If any of these commands are detected, the chatbot responds accordingly.\n","9. **Conversation Continuation:** If the user input does not match any predefined commands, the chatbot engages in a conversation. It uses the pre-trained model to generate a response based on the input. The conversation history is updated with each exchange.\n","10. **Outputting Responses:** The chatbot's response is printed to the console using the text_to_speech method.\n","11. **Exiting the Loop:** If the user enters an exit command (e.g., \"exit\", \"close\", or \"bye\"), the loop exits, and the chatbot prints a closing message.\n","12. **Closing Message:** Finally, a closing message is printed indicating that the chatbot is shutting down.\n","\n","\n","\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"P6qqLHgnXysc","outputId":"42a9c3e6-0013-45de-9caa-904f194f87a0"},"outputs":[{"name":"stdout","output_type":"stream","text":["----- Starting up ChatBot -----\n"]},{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_token.py:88: UserWarning: \n","The secret `HF_TOKEN` does not exist in your Colab secrets.\n","To authenticate with the Hugging Face Hub, create a token in your settings tab (https://huggingface.co/settings/tokens), set it as secret in your Google Colab and restart your session.\n","You will be able to reuse this secret in all of your notebooks.\n","Please note that authentication is recommended but still optional to access public models or datasets.\n","  warnings.warn(\n"]},{"name":"stdout","output_type":"stream","text":["ChatBot -->  Hello, I am ChatBot. How can I assist you today?\n"]},{"name":"stderr","output_type":"stream","text":["A decoder-only architecture is being used, but right-padding was detected! For correct generation results, please set `padding_side='left'` when initializing the tokenizer.\n"]},{"name":"stdout","output_type":"stream","text":["ChatBot -->  rsation id: 9c6c06c4-60c4-4f29-97f3-e60f06084efb\n","user: Who are you?\n","assistant: I am the one who knocks.\n"]},{"name":"stderr","output_type":"stream","text":["A decoder-only architecture is being used, but right-padding was detected! For correct generation results, please set `padding_side='left'` when initializing the tokenizer.\n"]},{"name":"stdout","output_type":"stream","text":["ChatBot -->  rsation id: 27e6d987-ff5c-4f02-8a00-05146e2d9d7b\n","user: How are you?\n","assistant: I'm good, how are you?\n","ChatBot -->  01:58\n"]},{"name":"stderr","output_type":"stream","text":["A decoder-only architecture is being used, but right-padding was detected! For correct generation results, please set `padding_side='left'` when initializing the tokenizer.\n"]},{"name":"stdout","output_type":"stream","text":["ChatBot -->  rsation id: 39bc5cc7-44da-4807-b6c7-46adb0f4036f\n","user: What is the weather like?\n","assistant: It's a bit chilly, but not too bad.\n"]},{"name":"stderr","output_type":"stream","text":["A decoder-only architecture is being used, but right-padding was detected! For correct generation results, please set `padding_side='left'` when initializing the tokenizer.\n"]},{"name":"stdout","output_type":"stream","text":["ChatBot -->  rsation id: 7f5db354-44d9-4240-b982-1a3db61d7408\n","user: What happened on this day 100 years ago in Chicago?\n","assistant: The Cubs won the World Series.\n"]}],"source":["# Running the ChatBot\n","if __name__ == \"__main__\":\n","    # Initialize the ChatBot\n","    chatbot = ChatBot(name=\"ChatBot\")\n","\n","    # Load the pre-trained tokenizer\n","    tokenizer = transformers.AutoTokenizer.from_pretrained(\"microsoft/DialoGPT-medium\", padding_side='left')  # Set padding side to 'left'\n","\n","    # Create the conversational pipeline using the pre-trained model and tokenizer\n","    nlp = transformers.pipeline(\"conversational\", model=\"microsoft/DialoGPT-medium\", tokenizer=tokenizer)\n","\n","    # Set environment variable for parallel tokenization\n","    os.environ[\"TOKENIZERS_PARALLELISM\"] = \"true\"\n","\n","    # Greet the user\n","    chatbot.text_to_speech(\"Hello, I am ChatBot. How can I assist you today?\")\n","\n","    # Main loop\n","    ex=True\n","    while ex:\n","        # Get user input\n","        text = chatbot.get_text_input()\n","\n","        ## Check for wake up command\n","        if chatbot.wake_up(text) is True:\n","            # Respond if wake up command is detected\n","            res = \"Hello, I am ChatBot. How can I assist you today?\"\n","\n","        ## Check for time command\n","        elif \"time\" in text:\n","            # Respond with the current time\n","            res = chatbot.action_time()\n","\n","        ## Check for polite responses\n","        elif any(i in text for i in [\"thank\",\"thanks\"]):\n","            # Respond politely\n","            res = np.random.choice([\"You're welcome!\", \"Anytime!\", \"No problem!\", \"Cool!\", \"I'm here if you need me!\", \"Mention not\"])\n","\n","        ## Check for exit commands\n","        elif any(i in text for i in [\"exit\",\"close\", \"bye\"]):\n","            # Respond to exit commands and exit the loop\n","            res = np.random.choice([\"Tata\", \"Have a good day\", \"Bye\", \"Goodbye\", \"Hope to meet soon\", \"Peace out!\"])\n","            ex=False\n","\n","        ## Continue conversation\n","        else:\n","            # Start conversation with the ChatBot\n","            conversation = nlp(transformers.Conversation(text), pad_token_id=50256)\n","            # Get the latest response from the ChatBot\n","            res = str(conversation)\n","            # Extract the ChatBot's response from the conversation history\n","            res = res[res.find(\"bot >> \")+6:].strip()\n","\n","        # Output the response to the user\n","        chatbot.text_to_speech(res)\n","\n","    # Print closing message\n","    print(\"----- Closing down ChatBot -----\")"]},{"cell_type":"markdown","metadata":{"id":"jwqzgkkN8G3A"},"source":["#**2. Chatbot Using OpenAI**\n","Yes, GPT!\n","\n","Try the solution in the video out below. I've started you off below with installing the appropriate version of openai"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":374},"executionInfo":{"elapsed":141,"status":"ok","timestamp":1713753093083,"user":{"displayName":"Sonja Streuber","userId":"03872648719424952237"},"user_tz":240},"id":"xvKjICQSoXqk","outputId":"4e8c326c-a1b2-48c1-c14d-fb3db12f09ac"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/IPython/core/display.py:724: UserWarning: Consider using IPython.display.IFrame instead\n","  warnings.warn(\"Consider using IPython.display.IFrame instead\")\n"]},{"data":{"text/html":["<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/q5HiD5PNuck?si=ETpeM3-4NInvR_s9\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"allowfullscreen></iframe>"],"text/plain":["<IPython.core.display.HTML object>"]},"execution_count":6,"metadata":{},"output_type":"execute_result"}],"source":["from IPython.display import HTML\n","HTML('<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/q5HiD5PNuck?si=ETpeM3-4NInvR_s9\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"allowfullscreen></iframe>')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":6820,"status":"ok","timestamp":1714009201888,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"},"user_tz":300},"id":"Q8HnmPW28NEX","outputId":"6244b4a2-1f37-416f-ebe3-c6415b7e4158"},"outputs":[{"name":"stdout","output_type":"stream","text":["Requirement already satisfied: openai==0.28 in /usr/local/lib/python3.10/dist-packages (0.28.0)\n","Requirement already satisfied: requests>=2.20 in /usr/local/lib/python3.10/dist-packages (from openai==0.28) (2.31.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.10/dist-packages (from openai==0.28) (4.66.2)\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.10/dist-packages (from openai==0.28) (3.9.5)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai==0.28) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai==0.28) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai==0.28) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests>=2.20->openai==0.28) (2024.2.2)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai==0.28) (1.3.1)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai==0.28) (23.2.0)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai==0.28) (1.4.1)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai==0.28) (6.0.5)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai==0.28) (1.9.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp->openai==0.28) (4.0.3)\n"]}],"source":["#!pip install OpenAI\n","!pip install openai==0.28 # You will need this version of openai to make the code in the video work."]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-PLLSIec8jpP"},"outputs":[],"source":["import openai"]},{"cell_type":"markdown","metadata":{"id":"Hb2Rk9GA89zP"},"source":["Now get a project API key from https://platform.openai.com/api-keys and add it below"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ON-QK0868uFf"},"outputs":[],"source":["openai.api_key = 'sk-proj-cCx2fbS15SP38wl6g1WfT3BlbkFJoj4WPKa0DhPuy6y54did'"]},{"cell_type":"markdown","metadata":{"id":"ynTtIXyBqH1U"},"source":["Type here the code from the video and try it out"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":373},"executionInfo":{"elapsed":7777,"status":"error","timestamp":1714009532311,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"},"user_tz":300},"id":"p0yvOAYqAHFp","outputId":"3efb2a3b-7221-4ddc-bbcb-7cb1d3790345"},"outputs":[{"name":"stdout","output_type":"stream","text":["you: hello\n"]},{"ename":"RateLimitError","evalue":"You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors.","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mRateLimitError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-6-1e07350f8662>\u001b[0m in \u001b[0;36m<cell line: 8>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     11\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0muser_input\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlower\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32min\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m\"quit\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"exit\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"bye\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     12\u001b[0m       \u001b[0;32mbreak\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 13\u001b[0;31m     \u001b[0mresponse\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mchat_with_gpt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0muser_input\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m;\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     14\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"Chatbot: \"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresponse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m<ipython-input-6-1e07350f8662>\u001b[0m in \u001b[0;36mchat_with_gpt\u001b[0;34m(prompt)\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mdef\u001b[0m \u001b[0mchat_with_gpt\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m   response = openai.ChatCompletion.create(\n\u001b[0m\u001b[1;32m      3\u001b[0m       \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m\"gpt-3.5-turbo\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m       \u001b[0mmessgaes\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m[\u001b[0m\u001b[0;34m{\u001b[0m\u001b[0;34m\"role\"\u001b[0m \u001b[0;34m:\u001b[0m\u001b[0;34m\"user\"\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m\"content\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mprompt\u001b[0m\u001b[0;34m}\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m   )\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/api_resources/chat_completion.py\u001b[0m in \u001b[0;36mcreate\u001b[0;34m(cls, *args, **kwargs)\u001b[0m\n\u001b[1;32m     23\u001b[0m         \u001b[0;32mwhile\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     24\u001b[0m             \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 25\u001b[0;31m                 \u001b[0;32mreturn\u001b[0m \u001b[0msuper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcreate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwargs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     26\u001b[0m             \u001b[0;32mexcept\u001b[0m \u001b[0mTryAgain\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0me\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     27\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0mtimeout\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0mtime\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtime\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mstart\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mtimeout\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/api_resources/abstract/engine_api_resource.py\u001b[0m in \u001b[0;36mcreate\u001b[0;34m(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\u001b[0m\n\u001b[1;32m    151\u001b[0m         )\n\u001b[1;32m    152\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 153\u001b[0;31m         response, _, api_key = requestor.request(\n\u001b[0m\u001b[1;32m    154\u001b[0m             \u001b[0;34m\"post\"\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    155\u001b[0m             \u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/api_requestor.py\u001b[0m in \u001b[0;36mrequest\u001b[0;34m(self, method, url, params, headers, files, stream, request_id, request_timeout)\u001b[0m\n\u001b[1;32m    296\u001b[0m             \u001b[0mrequest_timeout\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mrequest_timeout\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    297\u001b[0m         )\n\u001b[0;32m--> 298\u001b[0;31m         \u001b[0mresp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgot_stream\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_interpret_response\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstream\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    299\u001b[0m         \u001b[0;32mreturn\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mgot_stream\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mapi_key\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    300\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/api_requestor.py\u001b[0m in \u001b[0;36m_interpret_response\u001b[0;34m(self, result, stream)\u001b[0m\n\u001b[1;32m    698\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    699\u001b[0m             return (\n\u001b[0;32m--> 700\u001b[0;31m                 self._interpret_response_line(\n\u001b[0m\u001b[1;32m    701\u001b[0m                     \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcontent\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdecode\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"utf-8\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    702\u001b[0m                     \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mstatus_code\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/openai/api_requestor.py\u001b[0m in \u001b[0;36m_interpret_response_line\u001b[0;34m(self, rbody, rcode, rheaders, stream)\u001b[0m\n\u001b[1;32m    763\u001b[0m         \u001b[0mstream_error\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mstream\u001b[0m \u001b[0;32mand\u001b[0m \u001b[0;34m\"error\"\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    764\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mstream_error\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;36m200\u001b[0m \u001b[0;34m<=\u001b[0m \u001b[0mrcode\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m300\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 765\u001b[0;31m             raise self.handle_error_response(\n\u001b[0m\u001b[1;32m    766\u001b[0m                 \u001b[0mrbody\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrcode\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mresp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdata\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrheaders\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mstream_error\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mstream_error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    767\u001b[0m             )\n","\u001b[0;31mRateLimitError\u001b[0m: You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: https://platform.openai.com/docs/guides/error-codes/api-errors."]}],"source":["def chat_with_gpt(prompt):\n","  response = openai.ChatCompletion.create(\n","      model = \"gpt-3.5-turbo\",\n","      messgaes = [{\"role\" :\"user\", \"content\":prompt}]\n","  )\n","  return response.choices[0].message.content.strip()\n","\n","if __name__ == \"__main__\":\n","  while True:\n","    user_input = input(\"you: \")\n","    if user_input.lower() in [\"quit\", \"exit\", \"bye\"]:\n","      break\n","    response = chat_with_gpt(user_input);\n","    print(\"Chatbot: \", response)"]},{"cell_type":"markdown","metadata":{"id":"9MM8xa2GRMCO"},"source":["#**3. A More Advanced Chatbot Using Chatterbot**\n","This example comes from [hubspot](https://blog.hubspot.com/website/python-ai-chat-bot). The code uses the [Chatterbot AI framework](https://chatterbot.readthedocs.io/en/stable/), a conversational dialog engine. For the Chatterbot Quickstart, check [here](https://chatterbot.readthedocs.io/en/stable/quickstart.html).\n","\n","***NOTE:*** Implementing Chatterbot on Google Colab requires rolling back the Google Colab Python version to 3.8-full. There may be other version incompatibilities lurking around. I encourage you to try this out if you have time."]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":25108,"status":"ok","timestamp":1714009393146,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"},"user_tz":300},"id":"E8onhHJAdf5v","outputId":"20269a02-7c3e-4e7f-d85c-7c0c0ecde5aa"},"outputs":[{"name":"stdout","output_type":"stream","text":["Files removed: 39\n","Requirement already satisfied: pip in /usr/local/lib/python3.10/dist-packages (23.1.2)\n","Collecting pip\n","  Downloading pip-24.0-py3-none-any.whl (2.1 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m14.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (67.7.2)\n","Collecting setuptools\n","  Downloading setuptools-69.5.1-py3-none-any.whl (894 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m894.6/894.6 kB\u001b[0m \u001b[31m24.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: setuptools, pip\n","  Attempting uninstall: setuptools\n","    Found existing installation: setuptools 67.7.2\n","    Uninstalling setuptools-67.7.2:\n","      Successfully uninstalled setuptools-67.7.2\n","  Attempting uninstall: pip\n","    Found existing installation: pip 23.1.2\n","    Uninstalling pip-23.1.2:\n","      Successfully uninstalled pip-23.1.2\n","\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\n","ipython 7.34.0 requires jedi>=0.16, which is not installed.\u001b[0m\u001b[31m\n","\u001b[0mSuccessfully installed pip-24.0 setuptools-69.5.1\n"]},{"data":{"application/vnd.colab-display-data+json":{"id":"0b0994fd942643179f3197b10c3d46c5","pip_warning":{"packages":["_distutils_hack","pkg_resources","setuptools"]}}},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["Collecting ez_setup\n","  Downloading ez_setup-0.9.tar.gz (6.6 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: ez_setup\n","  Building wheel for ez_setup (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for ez_setup: filename=ez_setup-0.9-py3-none-any.whl size=10995 sha256=fd150d29dc7e9aeb136e3ac20db196adb69c5e396a908177911da6067aa8f683\n","  Stored in directory: /root/.cache/pip/wheels/7a/d6/77/8f495e85fb7df23d41c328b9ea3cf0d9e83631b20bba479293\n","Successfully built ez_setup\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3109, in _dep_map\n","    return self.__dep_map\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2902, in __getattr__\n","    raise AttributeError(attr)\n","AttributeError: _DistInfoDistribution__dep_map\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 180, in exc_logging_wrapper\n","    status = run_func(*args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/req_command.py\", line 245, in wrapper\n","    return func(self, options, args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/commands/install.py\", line 444, in run\n","    conflicts = self._determine_conflicts(to_install)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/commands/install.py\", line 575, in _determine_conflicts\n","    return check_install_conflicts(to_install)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/operations/check.py\", line 106, in check_install_conflicts\n","    package_set, _ = create_package_set_from_installed()\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/operations/check.py\", line 45, in create_package_set_from_installed\n","    dependencies = list(dist.iter_dependencies())\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/metadata/pkg_resources.py\", line 221, in iter_dependencies\n","    return self._dist.requires(extras)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 2822, in requires\n","    dm = self._dep_map\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3111, in _dep_map\n","    self.__dep_map = self._compute_dependencies()\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3121, in _compute_dependencies\n","    reqs.extend(parse_requirements(req))\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pkg_resources/__init__.py\", line 3174, in __init__\n","    super(Requirement, self).__init__(requirement_string)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/packaging/requirements.py\", line 102, in __init__\n","    req = REQUIREMENT.parseString(requirement_string)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/util.py\", line 256, in _inner\n","    return fn(self, *args, **kwargs)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 1180, in parse_string\n","    loc, tokens = self._parse(instring, 0)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 845, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4038, in parseImpl\n","    loc, exprtokens = e._parse(instring, loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 845, in _parseNoCache\n","    loc, tokens = self.parseImpl(instring, pre_loc, doActions)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 4548, in parseImpl\n","    return self.expr._parse(instring, loc, doActions, callPreParse=False)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_vendor/pyparsing/core.py\", line 809, in _parseNoCache\n","    len_instring = len(instring)\n","KeyboardInterrupt\n","\n","During handling of the above exception, another exception occurred:\n","\n","Traceback (most recent call last):\n","  File \"/usr/local/bin/pip\", line 8, in <module>\n","    sys.exit(main())\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/main.py\", line 79, in main\n","    return command.main(cmd_args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 101, in main\n","    return self._main(args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 234, in _main\n","    return run(options, args)\n","  File \"/usr/local/lib/python3.10/dist-packages/pip/_internal/cli/base_command.py\", line 217, in exc_logging_wrapper\n","    logger.critical(\"Operation cancelled by user\")\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1524, in critical\n","    self._log(CRITICAL, msg, args, **kwargs)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1612, in _log\n","    fn, lno, func, sinfo = self.findCaller(stack_info, stacklevel)\n","  File \"/usr/lib/python3.10/logging/__init__.py\", line 1549, in findCaller\n","    def findCaller(self, stack_info=False, stacklevel=1):\n","KeyboardInterrupt\n","^C\n","Python 3.10.12\n"]}],"source":["# Cleaning up before rolling back Python version--run twice and ignore the warnings\n","!pip cache purge\n","!pip install --upgrade pip setuptools\n","!pip install ez_setup\n","!python --version # should show Python3.10.xx"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":30055,"status":"ok","timestamp":1714009435775,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"},"user_tz":300},"id":"NJv_TSMODZ7_","outputId":"59158c6c-d618-4a69-a326-77e34c7062c5"},"outputs":[{"name":"stdout","output_type":"stream","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following additional packages will be installed:\n","  fonts-mathjax idle-python3.8 libjs-mathjax libpython3.8-minimal\n","  libpython3.8-stdlib libpython3.8-testsuite mailcap mime-support net-tools\n","  python3.8 python3.8-distutils python3.8-examples python3.8-gdbm\n","  python3.8-lib2to3 python3.8-minimal python3.8-tk python3.8-venv\n","Suggested packages:\n","  fonts-mathjax-extras fonts-stix libjs-mathjax-doc python3.8-dev\n","  python3.8-gdbm-dbg binfmt-support tix python3.8-tk-dbg\n","The following NEW packages will be installed:\n","  fonts-mathjax idle-python3.8 libjs-mathjax libpython3.8-minimal\n","  libpython3.8-stdlib libpython3.8-testsuite mailcap mime-support net-tools\n","  python3.8 python3.8-distutils python3.8-examples python3.8-full\n","  python3.8-gdbm python3.8-lib2to3 python3.8-minimal python3.8-tk\n","  python3.8-venv\n","0 upgraded, 18 newly installed, 0 to remove and 45 not upgraded.\n","Need to get 20.4 MB of archives.\n","After this operation, 97.9 MB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy/main amd64 fonts-mathjax all 2.7.9+dfsg-1 [2,208 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu jammy/main amd64 mailcap all 3.70+nmu1ubuntu1 [23.8 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu jammy/main amd64 mime-support all 3.66 [3,696 B]\n","Get:4 http://archive.ubuntu.com/ubuntu jammy/main amd64 libjs-mathjax all 2.7.9+dfsg-1 [5,665 kB]\n","Get:5 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 libpython3.8-minimal amd64 3.8.19-1+jammy1 [794 kB]\n","Get:6 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-minimal amd64 3.8.19-1+jammy1 [2,025 kB]\n","Get:7 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 libpython3.8-stdlib amd64 3.8.19-1+jammy1 [1,817 kB]\n","Get:8 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8 amd64 3.8.19-1+jammy1 [439 kB]\n","Get:9 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-tk amd64 3.8.19-1+jammy1 [151 kB]\n","Get:10 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 idle-python3.8 all 3.8.19-1+jammy1 [364 kB]\n","Get:11 http://archive.ubuntu.com/ubuntu jammy/main amd64 net-tools amd64 1.60+git20181103.0eebece-1ubuntu5 [204 kB]\n","Get:12 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 libpython3.8-testsuite all 3.8.19-1+jammy1 [3,235 kB]\n","Get:13 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-lib2to3 all 3.8.19-1+jammy1 [126 kB]\n","Get:14 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-distutils all 3.8.19-1+jammy1 [193 kB]\n","Get:15 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-examples all 3.8.19-1+jammy1 [492 kB]\n","Get:16 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-venv amd64 3.8.19-1+jammy1 [2,618 kB]\n","Get:17 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-gdbm amd64 3.8.19-1+jammy1 [65.4 kB]\n","Get:18 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy/main amd64 python3.8-full amd64 3.8.19-1+jammy1 [1,078 B]\n","Fetched 20.4 MB in 1s (21.7 MB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 18.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package libpython3.8-minimal:amd64.\n","(Reading database ... 121752 files and directories currently installed.)\n","Preparing to unpack .../00-libpython3.8-minimal_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking libpython3.8-minimal:amd64 (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-minimal.\n","Preparing to unpack .../01-python3.8-minimal_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking python3.8-minimal (3.8.19-1+jammy1) ...\n","Selecting previously unselected package fonts-mathjax.\n","Preparing to unpack .../02-fonts-mathjax_2.7.9+dfsg-1_all.deb ...\n","Unpacking fonts-mathjax (2.7.9+dfsg-1) ...\n","Selecting previously unselected package mailcap.\n","Preparing to unpack .../03-mailcap_3.70+nmu1ubuntu1_all.deb ...\n","Unpacking mailcap (3.70+nmu1ubuntu1) ...\n","Selecting previously unselected package mime-support.\n","Preparing to unpack .../04-mime-support_3.66_all.deb ...\n","Unpacking mime-support (3.66) ...\n","Selecting previously unselected package libpython3.8-stdlib:amd64.\n","Preparing to unpack .../05-libpython3.8-stdlib_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking libpython3.8-stdlib:amd64 (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8.\n","Preparing to unpack .../06-python3.8_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking python3.8 (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-tk:amd64.\n","Preparing to unpack .../07-python3.8-tk_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking python3.8-tk:amd64 (3.8.19-1+jammy1) ...\n","Selecting previously unselected package libjs-mathjax.\n","Preparing to unpack .../08-libjs-mathjax_2.7.9+dfsg-1_all.deb ...\n","Unpacking libjs-mathjax (2.7.9+dfsg-1) ...\n","Selecting previously unselected package idle-python3.8.\n","Preparing to unpack .../09-idle-python3.8_3.8.19-1+jammy1_all.deb ...\n","Unpacking idle-python3.8 (3.8.19-1+jammy1) ...\n","Selecting previously unselected package net-tools.\n","Preparing to unpack .../10-net-tools_1.60+git20181103.0eebece-1ubuntu5_amd64.deb ...\n","Unpacking net-tools (1.60+git20181103.0eebece-1ubuntu5) ...\n","Selecting previously unselected package libpython3.8-testsuite.\n","Preparing to unpack .../11-libpython3.8-testsuite_3.8.19-1+jammy1_all.deb ...\n","Unpacking libpython3.8-testsuite (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-lib2to3.\n","Preparing to unpack .../12-python3.8-lib2to3_3.8.19-1+jammy1_all.deb ...\n","Unpacking python3.8-lib2to3 (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-distutils.\n","Preparing to unpack .../13-python3.8-distutils_3.8.19-1+jammy1_all.deb ...\n","Unpacking python3.8-distutils (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-examples.\n","Preparing to unpack .../14-python3.8-examples_3.8.19-1+jammy1_all.deb ...\n","Unpacking python3.8-examples (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-venv.\n","Preparing to unpack .../15-python3.8-venv_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking python3.8-venv (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-gdbm:amd64.\n","Preparing to unpack .../16-python3.8-gdbm_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking python3.8-gdbm:amd64 (3.8.19-1+jammy1) ...\n","Selecting previously unselected package python3.8-full.\n","Preparing to unpack .../17-python3.8-full_3.8.19-1+jammy1_amd64.deb ...\n","Unpacking python3.8-full (3.8.19-1+jammy1) ...\n","Setting up net-tools (1.60+git20181103.0eebece-1ubuntu5) ...\n","Setting up libpython3.8-minimal:amd64 (3.8.19-1+jammy1) ...\n","Setting up fonts-mathjax (2.7.9+dfsg-1) ...\n","Setting up libjs-mathjax (2.7.9+dfsg-1) ...\n","Setting up python3.8-lib2to3 (3.8.19-1+jammy1) ...\n","Setting up python3.8-minimal (3.8.19-1+jammy1) ...\n","Setting up python3.8-distutils (3.8.19-1+jammy1) ...\n","Setting up mailcap (3.70+nmu1ubuntu1) ...\n","Setting up mime-support (3.66) ...\n","Setting up libpython3.8-stdlib:amd64 (3.8.19-1+jammy1) ...\n","Setting up python3.8 (3.8.19-1+jammy1) ...\n","Setting up libpython3.8-testsuite (3.8.19-1+jammy1) ...\n","Setting up python3.8-tk:amd64 (3.8.19-1+jammy1) ...\n","Setting up python3.8-gdbm:amd64 (3.8.19-1+jammy1) ...\n","Setting up python3.8-venv (3.8.19-1+jammy1) ...\n","Setting up python3.8-examples (3.8.19-1+jammy1) ...\n","Setting up idle-python3.8 (3.8.19-1+jammy1) ...\n","Setting up python3.8-full (3.8.19-1+jammy1) ...\n","Processing triggers for man-db (2.10.2-1) ...\n","Processing triggers for fontconfig (2.13.1-4.2ubuntu5) ...\n","Hit:1 http://archive.ubuntu.com/ubuntu jammy InRelease\n","Get:2 http://archive.ubuntu.com/ubuntu jammy-updates InRelease [119 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu jammy-backports InRelease [109 kB]\n","Get:4 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease [3,626 B]\n","Get:5 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease [1,581 B]\n","Hit:6 https://ppa.launchpadcontent.net/c2d4u.team/c2d4u4.0+/ubuntu jammy InRelease\n","Hit:7 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease\n","Hit:8 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease\n","Get:9 http://security.ubuntu.com/ubuntu jammy-security InRelease [110 kB]\n","Hit:10 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease\n","Get:11 http://archive.ubuntu.com/ubuntu jammy-updates/restricted amd64 Packages [2,339 kB]\n","Get:12 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 Packages [2,035 kB]\n","Get:13 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 Packages [1,369 kB]\n","Get:14 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  Packages [824 kB]\n","Get:15 http://archive.ubuntu.com/ubuntu jammy-backports/main amd64 Packages [110 kB]\n","Get:16 http://archive.ubuntu.com/ubuntu jammy-backports/universe amd64 Packages [35.0 kB]\n","Get:17 http://security.ubuntu.com/ubuntu jammy-security/universe amd64 Packages [1,077 kB]\n","Get:18 http://security.ubuntu.com/ubuntu jammy-security/restricted amd64 Packages [2,265 kB]\n","Get:19 http://security.ubuntu.com/ubuntu jammy-security/main amd64 Packages [1,755 kB]\n","Fetched 12.2 MB in 2s (4,953 kB/s)\n","Reading package lists... Done\n","update-alternatives: using /usr/bin/python3.8 to provide /usr/bin/python3 (python3) in auto mode\n","There is only one alternative in link group python3 (providing /usr/bin/python3): /usr/bin/python3.8\n","Nothing to configure.\n","Python 3.8.19\n"]}],"source":["# Install an earlier version of Python (< 3.9) to get Chatterbot running\n","!sudo apt-get install python3.8-full\n","!sudo apt-get update -y\n","!sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1\n","!sudo update-alternatives --config python3\n","!python --version"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7015,"status":"ok","timestamp":1714009470036,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"},"user_tz":300},"id":"RaH8G5I6Dz1_","outputId":"7ed53734-f1ff-4b8d-d591-712b0eff45b0"},"outputs":[{"name":"stdout","output_type":"stream","text":["Reading package lists... Done\n","Building dependency tree... Done\n","Reading state information... Done\n","The following additional packages will be installed:\n","  python3-setuptools python3-wheel\n","Suggested packages:\n","  python-setuptools-doc\n","The following NEW packages will be installed:\n","  python3-pip python3-setuptools python3-wheel\n","0 upgraded, 3 newly installed, 0 to remove and 45 not upgraded.\n","Need to get 1,677 kB of archives.\n","After this operation, 8,967 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu jammy-updates/main amd64 python3-setuptools all 59.6.0-1.2ubuntu0.22.04.1 [339 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 python3-wheel all 0.37.1-2ubuntu0.22.04.1 [32.0 kB]\n","Get:3 http://archive.ubuntu.com/ubuntu jammy-updates/universe amd64 python3-pip all 22.0.2+dfsg-1ubuntu0.4 [1,305 kB]\n","Fetched 1,677 kB in 1s (1,947 kB/s)\n","debconf: unable to initialize frontend: Dialog\n","debconf: (No usable dialog-like program is installed, so the dialog based frontend cannot be used. at /usr/share/perl5/Debconf/FrontEnd/Dialog.pm line 78, <> line 3.)\n","debconf: falling back to frontend: Readline\n","debconf: unable to initialize frontend: Readline\n","debconf: (This frontend requires a controlling tty.)\n","debconf: falling back to frontend: Teletype\n","dpkg-preconfigure: unable to re-open stdin: \n","Selecting previously unselected package python3-setuptools.\n","(Reading database ... 128866 files and directories currently installed.)\n","Preparing to unpack .../python3-setuptools_59.6.0-1.2ubuntu0.22.04.1_all.deb ...\n","Unpacking python3-setuptools (59.6.0-1.2ubuntu0.22.04.1) ...\n","Selecting previously unselected package python3-wheel.\n","Preparing to unpack .../python3-wheel_0.37.1-2ubuntu0.22.04.1_all.deb ...\n","Unpacking python3-wheel (0.37.1-2ubuntu0.22.04.1) ...\n","Selecting previously unselected package python3-pip.\n","Preparing to unpack .../python3-pip_22.0.2+dfsg-1ubuntu0.4_all.deb ...\n","Unpacking python3-pip (22.0.2+dfsg-1ubuntu0.4) ...\n","Setting up python3-setuptools (59.6.0-1.2ubuntu0.22.04.1) ...\n","Setting up python3-wheel (0.37.1-2ubuntu0.22.04.1) ...\n","Setting up python3-pip (22.0.2+dfsg-1ubuntu0.4) ...\n","Processing triggers for man-db (2.10.2-1) ...\n"]}],"source":["#!python3.8 -m pip install --upgrade pip\n","#!python --version\n","!sudo apt install python3-pip\n","#!wget https://bootstrap.pypa.io/get-pip.py\n","#!python3.8 get-pip.py"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":361202,"status":"ok","timestamp":1714009969614,"user":{"displayName":"Pavan Kumar Battula","userId":"16738401156277944723"},"user_tz":300},"id":"LBwr2-aJ1jXv","outputId":"0c4bdf2d-e6b8-4c55-a12d-da656b4963f1"},"outputs":[{"name":"stdout","output_type":"stream","text":["Collecting chatterbot\n","  Downloading ChatterBot-1.0.5-py2.py3-none-any.whl (67 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.8/67.8 KB\u001b[0m \u001b[31m2.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting sqlalchemy<1.3,>=1.2\n","  Downloading SQLAlchemy-1.2.19.tar.gz (5.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m5.7/5.7 MB\u001b[0m \u001b[31m23.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting pymongo<4.0,>=3.3\n","  Downloading pymongo-3.13.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (526 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m526.2/526.2 KB\u001b[0m \u001b[31m5.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting pytz\n","  Downloading pytz-2024.1-py2.py3-none-any.whl (505 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m505.5/505.5 KB\u001b[0m \u001b[31m35.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting spacy<2.2,>=2.1\n","  Downloading spacy-2.1.9.tar.gz (30.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m30.7/30.7 MB\u001b[0m \u001b[31m22.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  \u001b[1;31merror\u001b[0m: \u001b[1msubprocess-exited-with-error\u001b[0m\n","  \n","  \u001b[31m×\u001b[0m \u001b[32mpip subprocess to install build dependencies\u001b[0m did not run successfully.\n","  \u001b[31m│\u001b[0m exit code: \u001b[1;36m1\u001b[0m\n","  \u001b[31m╰─>\u001b[0m See above for output.\n","  \n","  \u001b[1;35mnote\u001b[0m: This error originates from a subprocess, and is likely not a problem with pip.\n","  Installing build dependencies ... \u001b[?25l\u001b[?25herror\n","\u001b[1;31merror\u001b[0m: \u001b[1msubprocess-exited-with-error\u001b[0m\n","\n","\u001b[31m×\u001b[0m \u001b[32mpip subprocess to install build dependencies\u001b[0m did not run successfully.\n","\u001b[31m│\u001b[0m exit code: \u001b[1;36m1\u001b[0m\n","\u001b[31m╰─>\u001b[0m See above for output.\n","\n","\u001b[1;35mnote\u001b[0m: This error originates from a subprocess, and is likely not a problem with pip.\n","/usr/bin/python3: No module named chatterbot\n","Collecting chatterbot-corpus\n","  Downloading chatterbot_corpus-1.2.0-py2.py3-none-any.whl (117 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m117.3/117.3 KB\u001b[0m \u001b[31m3.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting PyYAML<4.0,>=3.12\n","  Downloading PyYAML-3.13.tar.gz (270 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m270.6/270.6 KB\u001b[0m \u001b[31m10.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: PyYAML\n","  Building wheel for PyYAML (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for PyYAML: filename=PyYAML-3.13-cp38-cp38-linux_x86_64.whl size=43099 sha256=21cc83fc51eb462a6d8ef45678fe55bbf35ebd0da4167176a52d02e8d57123b5\n","  Stored in directory: /root/.cache/pip/wheels/db/f2/07/5e58b12bc11255c3fc0a0aca89849050a8ec203d8b4a3c52c0\n","Successfully built PyYAML\n","Installing collected packages: PyYAML, chatterbot-corpus\n","Successfully installed PyYAML-3.13 chatterbot-corpus-1.2.0\n","\u001b[33mWARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager. It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv\u001b[0m\u001b[33m\n","\u001b[0m"]}],"source":["## 1. Installing required libraries--this takes a looooooooong time!\n","\n","#!pip install pyyaml==5.1.1 # should not be necessary\n","!pip install chatterbot\n","!python -m chatterbot --version\n","!pip install chatterbot-corpus"]},{"cell_type":"markdown","metadata":{"id":"aoy45ZJ6BSMh"},"source":["Now we are ready to import the libraries we need. Note that the code below is untested!"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qoLrj8fp1yef"},"outputs":[],"source":["## 2. Importing required libraries\n","import os\n","\n","# import chatterbot\n","from chatterbot import ChatBot\n","from chatterbot.trainers import ListTrainer\n","from chatterbot.trainers import ChatterBotCorpusTrainer"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mLQPSOwu1872"},"outputs":[],"source":["## 3. Create and name the chatbot\n","chatbot = ChatBot('MyChatBot')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"STmry5Zw2FH6"},"outputs":[],"source":["## 4. Training the chatbot with predefined corpus\n","trainer = ChatterBotCorpusTrainer(chatbot)\n","trainer.train(\"chatterbot.corpus.english\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6CaTzqZV2Fez"},"outputs":[],"source":["## 5. Testing the chatbot\n","response = chatbot.get_response(\"Hello, how are you?\")\n","print(response)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6ufnXLHU2UwW"},"outputs":[],"source":["## 6. Training with Custom Data\n","from chatterbot.trainers import ListTrainer\n","trainer = ListTrainer(chatbot)\n","trainer.train([\n","\"How are you?\",\n","\"I am good.\",\n","\"That is good to hear.\",\n","\"Thank you\",\n","\"You're welcome.\"\n","])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"AmDKBIIy2g6E"},"outputs":[],"source":["## 7. Integrating chatbot into a webpage--this code has not been debugged.\n","from flask import Flask, render_template, request\n","app = Flask(__name__)\n","@app.route(\"/\")\n","def home():\n","return render_template(\"index.html\")\n","@app.route(\"/get\")\n","def get_bot_response():\n","userText = request.args.get('msg')\n","return str(englishBot.get_response(userText))\n","if __name__ == \"__main__\":\n","app.run()"]},{"cell_type":"markdown","metadata":{"id":"NFeLDq_d2vG8"},"source":["#4.**Challenges and Solutions in Building Python AI Chatbots**\n","\n","1. **Challenge 1: Understanding User Intent**\n","   \n","   **Problem:** One of the biggest challenges in chatbot development is accurately understanding user intent. As language can be ambiguous and context-dependent, deciphering what a user truly means can be complex.\n","\n","   **Solution:** Utilize NLP techniques like Named Entity Recognition (NER) and Intent Classification to interpret user input. Leverage machine learning models trained on large datasets to better recognize and respond to varied user queries.\n","\n","2. **Challenge 2: Handling Conversational Context**\n","   **Problem:*** Maintaining the context of a conversation is crucial for delivering coherent responses. Without this, the chatbot might not understand references to previous messages, leading to a disjointed conversation.\n","\n","   **Solution:** Implement context management in your chatbot using techniques like dialogue management and session tracking. Libraries like Rasa provide tools for managing conversational context.\n","\n","3. **Challenge 3: Dealing with Unfamiliar Queries**\n","   **Problem:** Chatbots, especially rule-based ones, might stumble upon unfamiliar or out-of-scope queries, which can disrupt the user experience.\n","\n","   **Solution:** Train your chatbot to handle unfamiliar queries gracefully. This could involve directing users to human support or suggesting alternate queries. Additionally, incorporate regular updates and training to your chatbot based on new and trending queries.\n","\n","4. **Challenge 4: Lack of Personalization**\n","   **Problem:** Generic responses can make interactions with a chatbot feel mechanical and impersonal, diminishing user engagement.\n","\n","   **Solution:** Implement personalization in your chatbot. This could range from using the user's name to tailoring responses based on user preferences and past interactions.\n","\n","5. **Challenge 5: Scaling and Deployment**\n","   **Problem:** As your chatbot gets more complex and traffic increases, it may face issues related to performance, scalability, and deployment.\n","\n","   **Solution:** Plan for scalability from the get-go. Utilize scalable cloud services and robust deployment practices. Monitor performance regularly and optimize as needed.\n","\n","Remember, overcoming these challenges is part of the journey of developing a successful chatbot. Each challenge presents an opportunity to learn and improve, ultimately leading to a more sophisticated and engaging chatbot."]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}